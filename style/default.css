/*sets the margin of body to zero to make sure there
are no gaps on the edges of the page.
Also defines the font for the whole page*/
body {
    margin: 0px;
    font-family: Arial, Helvetica, sans-serif;
}

/*sets the size of the h1 tags*/
h1 {
    font-size: 2.5rem;
    font-weight: 700;
}

/* adds a line under all h2 tags*/
h2 {
    text-decoration-line: underline;
    text-decoration-style: solid;
    text-decoration-thickness: 3px;
    text-decoration-color: rgb(0, 132, 255);
}

hr {
    border-width: 1px;
    border-style: solid;
    border-color: black;
    width: 90%;
}

/* centers the element horizontally and sets its height 
depending on the browser windows height*/
.heading-container {
    width: 50vw;
    transform: translate(0, 20vh);
    margin: auto;

    text-align: center;
    padding: 10px;
    background-color: rgb(0, 132, 255);
}

/*----NAVBAR----*/
/*hides the <input> element since its functionality 
is borrowed by .hambuger-toggle-container*/
#burger-toggle {
    display: none;
}

.nav-logo img {
    height: 62px;
    width: 105;
    
}

/*makes its child elements display evenely in a horizontal flex*/
.navbar {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;

    padding: 10px;
    background-color: rgb(0, 132, 255);
}

.default-list {
    display: flex;
    flex-direction: row;
    gap: 20px;
    list-style-type: none;
    margin: 0;
    padding: 0;
}

.hamburger-list {
    flex-direction: column;
    gap: 20px;
    list-style-type: none;
    margin: 0;
    padding-left: 22vw;
}

.hamburger-list li {
    padding: 10px;
    background-color: rgba(255, 255, 255, 0.85);
}

.default-list a, .hamburger-list a {
    text-align: center;
    text-decoration: none;
    font-size: 1.5rem;
    padding: 10px;
    color: black;
}

.default-list a:hover, .hamburger-list a:hover {
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 15px;
}

.hamburger-list-container {
    display: none;
    position: absolute;
    z-index: 1;
}

.hamburger-toggle-container {
    display: none;
}

@media (max-width:785px) {
    .hamburger-toggle-container {
        display: block;
    }

    .default-list {
        display: none;
    }

    .hamburger-toggle-container {
        cursor: pointer;
    }

    #burger-toggle:checked~.hamburger-list-container {
        display: block;
    }
}

/* adds a indicator in the navbar that shows
what page u are on*/
.active {
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 15px;
}

/* parallax effekten er hentet fra W3Schools https://www.w3schools.com/howto/howto_css_parallax.asp */

.parallax {
  
    /* Full height */
    height: 100%; 
  
    /* Create the parallax scrolling effect */
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }

  #parallax-index-bilde {
    /* The image used */
    background-image: url(../media/bygg-p32.webp);
  }

  #parallax-bibliotek-bilde {
    /* The image used */
    background-image: url(../media/bibliotek-p35-lokaler.webp);
  }

  #parallax-kantine-bilde {
    /* The image used */
    background-image: url(../media/kantine-p35.webp);
  }
/*--------------------------------*/

.grid-container>div,
article {
    padding: 40px;
}

#references-list li {
    padding: 10px;
}


/*small image*/

/*sets the height of elements with this class.
used to make images larger when the curser hovers
over them*/
.img-hover-effect:hover {
    height: 40vh;
}

/*Hides thez <input> since it is not in use
the functinality is only borrowed by image-toggle-container*/
#image-toggle {
    display: none;
}

.image-toggle-container i {
    padding-right: 300px;
}

/*styles a div so its a slightly transparent black div
that covers the entire screen*/
.background-overlay {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    width: 120%;
    height: 120%;
    background-color: rgba(0, 0, 0, 0.9);
}

/*makes the cursor a pointer when hovered over to 
show the user that the element is clickable.
Also uses the z-index to make sure the toggle button
always is visible on top and always clickable*/
.image-toggle-container {
    cursor: pointer;
    z-index: 3;
    color: green;
}

/*sets the height and aspect ratio of the image in order 
to set an explicit width and height on image elements 
to reduce layout shifts and improve CLS.*/
.img-small {
    height: 35vh;
    aspect-ratio: 1.33;
}

/*hides the big image by default*/
.img-big-container {
    display: none;
}

/*sets the z-index so the image is always visible, but
always under the close button.
Also centers the image and sets the height depending 
on the width of the browser window*/
.img-big {
    z-index: 2;
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    height: 40vw;
}

#image-toggle:checked~ .img-big-container {
    display: block;
}

#image-toggle:checked~ .img-small-container {
    display: none;
}

#image-toggle:checked~ .image-toggle-container {
    position: fixed;
    left: 20px;
    top: 40px;
    color: red;
}

/*styles the boxes*/
.bottom-icon {
    display: flex;
    position: relative;
    min-width: 150px;
    height: 150px;
    margin: 10px;    

    background-color: rgb(231, 231, 231);
}

/* adds a shadow and runs a 1sec long animation once. */
.bottom-icon:hover {
    box-shadow: 0px 0px 100px rgb(58, 58, 58);

    animation: rotate 1s;
    animation-iteration-count: 1;
}
/* specifies all the positions and rotations of the animation
(the similiar values are combined to take less space and easier to adjust)
*/
@keyframes rotate {
    0%, 100% { transform: translate(0px, -3px) rotate(-1deg); }
    20%, 40%, 60%, 80% { transform: translate(-4px, -1px) rotate(1deg); }
    30%, 50%, 70%, 90% { transform: translate(4px, 3px) rotate(0deg); }
}

/* centers the element and makes it the same size as its parent. */
.bottom-box a {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    
    text-align: center;
    line-height: 15;
    
    color: black;
    text-decoration: none;
}

/*centers the i tags inside of .bottom box horizontally*/
.bottom-box i {
    margin: auto; /*centers the element*/
    color: #0084ff;
    font-size: 75px;

    padding-bottom: 40px;
}
.bottom-box i:hover {
    font-size: 80px;
}

/* main-grid */
.top-box {
    grid-column: 1/5;
    grid-row: 1/2;

    background-color: rgb(0, 132, 255);
    height: 80vh;
    min-height: 500px;
}

.left-box {
    grid-column: 1/3;
    grid-row: 2/3;

    background-color: white;
    height: 40vh;
    width: 50vw;

    flex-direction: column;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* specifies article-box's position in the grid and forces 
space between the edges and the content of the box*/
.article-box {
    grid-column: 1/5;
    grid-row: 3/4;

    background-color: rgb(231, 231, 231);
    padding-left: 15vw;
    padding-right: 15vw;
}

/*----bottom boxes----*/
/*specifies bottom-box's grid positions and makes its child 
elements display in a horizontal flex box*/
.bottom-box {
    grid-column: 1/5;
    grid-row: 4/5;

    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    align-items: center;
    align-content: center;
}

/*Grid adjustements when page is less than 800px*/
@media (max-width: 800px) {
    .right-box {
        grid-column: 3/5;
        grid-row: 2/3;

        background-color: white;
    }
}

@media (min-width: 800px) {
    .grid-container {
        display: grid;
        grid-template-columns: auto auto auto auto;
        grid-template-rows: minmax(100px, auto);
        gap: 0px;
        width: 100%;
        margin: 0 auto;
    }
}

/* FOOTER */

footer {
    background-color: rgb(0, 132, 255);
}

footer li {
    list-style-type: none;
    padding: 14px;
}

footer a {
    color: black;
}

.footer-left {
    grid-column: 1/2;
    grid-row: 1;

    display: table-cell;
}

@media (min-width: 800px) {

    .footer-middle {
        grid-column: 2/3;
        grid-row: 1;

        display: table-cell;
    }

    .footer-right {
        grid-column: 3/4;
        grid-row: 1;

        display: table-cell;
    }

}

/*Defines the footer grid */

@media (min-width: 800px) {
    footer {
        display: grid;
        grid-template-columns: minmax(200px, 20vw) minmax(200px, 20vw) minmax(200px, 20vw) auto;
        width: 100%;
        display: table;
        table-layout: fixed;
        border-spacing: 20px;
    }
}